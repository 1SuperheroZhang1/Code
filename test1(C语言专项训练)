//以下代码为，在牛客网中做专项练习时遇到的源码
//#include<stdio.h>
//int main()
//{
//	int a = 5, b = 3, t;
//	int &ra = a;
//	int &rb = b;
//	t = ra;
//	ra = rb;
//	rb = t;
//	printf("a=%d b=%d\n", a, b);
//	return 0;
//}
//#include <stdio.h>
//int fun(int a) {
//    int b = 0;
//    static int c = 3;
//    b++;
//    c++;
//    return (a + b + c);
//}
//
//int main() {
//    int i = 0;
//    for (; i < 3; i++)
//        printf("%d", fun(2));
//    return 0;
//}
//#include<stdio.h>
//#define add(a,b) a+b
//int main()
//{
//    printf("%d\n", 5 * add(3,4));
//    return 0;
//}
//#include  <stdio.h>
//int fun(int* data) {
//    *data = *data % 2;
//    return (*data) + 1;
//}
//int main() {
//    int data = 12;
//    fun(&data);
//    printf("%d,", data);
//    data = fun(&data);
//    printf("%d", data);
//}
//#include<stdio.h>
//#define ADD(x)  x*x
//
//int main()
//
//{
//	int a = 4, b = 6, c = 7, d = ADD(a + b) * c;
//	//d=4+6*4+6*7=4+24+42=70
//
//	printf("d=%d", d);
//
//}
//#include<stdio.h>
//int main()
//{
//	int i = 10, j = 2;
//	i *= j + 8;
//	printf("%d\n",i);
//}
//#include<stdio.h>
//int main()
//{
//	/*char* string_a = (char*)malloc(100 * sizeof(char));
//	char string_b[100];
//	printf("%d\n",sizeof(string_a));
//	printf("%d\n", sizeof(string_b));*/
//	int x = 0;
//	(x = 4 * 5, x * 5), x + 25;
//		printf("x=%d\n",x);
//}
//#include<stdio.h>
//int main()
//{
//	/*int x = -10;
//	int y = 6;
//	if (x >= 0)
//		y = x > 0 ? 1 : 0;
//	else
//		y = -1;
//	printf("y=%d\n",y);*/
//	float k = 0.8567;
//	printf("%06.1f%%", k * 100);
//}
//#include <stdio.h> 
//int main() {
//    int sum, pad, pAd;
//    sum = pad = 5;
//    pAd = ++sum, pAd++, ++pad;
//    printf("%d\n", pAd);
//}
//struct A1 {
//    virtual ~A1() {}
//};
//struct A2 {
//    virtual ~A2() {}
//};
//struct B1 : A1, A2 {};
//int main()
//{
//    B1 d;
//    A1* pb1 = &d;
//    A2* pb2 = dynamic_cast<A2*>(pb1);  //L1
//    A2* pb22 = static_cast<A2*>(pb1);  //L2
//    return 0;
//}
//#include <stdio.h>
//int main() {
//    printf("\n");
//    int a[5] = { 1, 2, 3, 4, 5 };
//    int* p, ** k;
//    p = a;
//    k = &p;
//    printf("%d", *(p++));
//    printf("%d", **k);
//    return (0);
//}
//void main() {
//    printf("s1=│%15s│s2=│%-5s│", "chinabeijing", "chi");
//}
//int main()
//{
//	double a = 5.5;
//	double b = 2.5;
//	int ret = (int)a + b / b;
//	printf("%d ",ret);
//	return 0;
//}
//#include <stdio.h>
//
//int main() {
//    int x = 023;
//    printf("%d\n", --x);
//}
//enum aa {
//    a = 5,
//    b,
//    c
//} bb;
//int main()
//{
//    bb = (enum aa)5;
//    return 0;
//}
//int main()
//{
//	int x = 5;
//	int y = 6;
//	int ret = x++ * --y;
//	printf("%d\n",ret);
//	return 0;
//}
//#include <stdio.h>
//int main() {
//    const int N = 10;
//    const int M = 2;
//    int* a = new int[N];
//    for (int i = 0; i < N; ++i)
//        a[i] = (0 == i % 2) ? (i + 2) : (i + 0);
//    int(*b)[N / M] = (int(*)[N / M]) a;
//    for (int i = 0; i < M; ++i)
//        for (int j = 0; j < N / M; ++j)
//            printf("%d", b[i][j]);
//    return 0;
//}
//struct Student {
//    int a;
//    char b;
//    char c;
//    long d;
//};
//int main() {
//    printf("%lu", sizeof(struct Student));
//}
//int main() {
//    int i = 010, j = 10;
//    printf("%d,%d\n", ++i, j--);
//    return 0;
//}
//#include<stdio.h>
//int main()
//{
//	//int x = 1,y = 2,z = 3;
//	//y += z-- / ++x;
//	//printf("%d\n",y);
//	//int x = 3<<2 | 3;
//	//0010 - 2
//	//0011 - 3
//	//0011 - 3
//	//0100 - 4
//	//0010 - 3
//	//0110 - 6
//	int x=2 + 3 * 4 + 7 / 3;
//	printf("%d\n",x);
//	return 0;
//}
#include <stdio.h>
//enum etest {
//    eparam1,
//    eparam2,
//    eparam3 = 10,
//    eparam4,
//    eparam5 = 'a',
//    eparam6
//}epr;
//int main()
//{
//    printf("%d,%d", eparam4, eparam6);
//    return 0;
//}
//main() {
//    int a = 011;
//    printf("%d\n", ++a);
//}
//#include <stdio.h>
//class A
//{
//public:
//    virtual void f() {}
//public:
//    A()
//    {
//        f();
//    }
//};
//
//class B1 :public A()
//{
//private:
//    char* _s;
//public:
//    B1()
//    {
//        _s = new char[1024];
//    }
//private:
//    void f()
//    {
//        delete _s[];
//        _s = NULL;
//    }
//}
//
//class B2 :public A
//{
//private:
//    int* _m;
//public:
//    B2()
//    {
//        _m = new int(2016);
//    }
//private:
//    virtual void f()
//    {
//        delete _m;
//        _m = NULL;
//    }
//}
//int main()
//{
//    A* a1 = new B();
//    A* a2 = new C;
//    delete a1;
//    delete a2;
//    return 0;
//}
//#include<stdio.h>
//void main() {
//    float x = 2.0, y;
//    if (x < 0.0) y = 0.0;
//    else if (x < 10.0) y = 1.0 / x;
//    else y = 1.0;
//    printf("%f\n", y);
//}
//void Func(char str_arg[100]) {
//    printf("%d\n", sizeof(str_arg));
//}
//int main(void) {
//    char str[] = "Hello";
//    printf("%d\n", sizeof(str));
//    printf("%d\n", strlen(str));
//    char* p = str;
//    printf("%d\n", sizeof(p));
//    Func(str);
//}
//#include<stdio.h>
//int main()
//{
//	//int j = 0;
//	//int k = 0;
//	//for (j = 0, k = -1; k = 1; j++, k++)
//	//	printf("****\n");
//	//int a = 2;
//	//int b = 3;
//	//int c = 4;
//	//int ret = !(a + b) - c + 1 || c + b / 2;
//	//printf("%d\n",ret);
//	//00000000000000000000000000000010
//	//01111111111111111111111111111101
//	//01111111111111111111111111111110
//	//10000000000000000000000000000001
//	//int a = 5, b = 6, w = 1, x = 2, y = 3, z = 4;
//
//	//(a = w > x) && (b = y > z);
//	//printf("%d\n",b);
//	//char p1[15] = "abcd", * p2 = "ABCD", str[50] = "xyz";
//	//strcpy(str + 2, strcat(p1 + 2, p2 + 1));
//	//printf("%s", str);
//	//short i = 65537;
//	//int j = i + 1;
//	//printf("i=%d,j=%d\n", i, j);
//	//float x = 2.5, y = 4.7;int a = 7;
//	//printf("%.1f", x + a % 3 * (int)(x + y) % 2 / 4);
//	return 0;
//}
//void Func(char str_arg[2])
//{
//    int m = sizeof(str_arg);
//    int n = strlen(str_arg);
//    printf("%d\n", m);
//    printf("%d\n", n);
//}
//int main(void)
//{
//    char str[] = "Hello";
//    Func(str);
//}
//void main() {
//    //int a = 2, b = 2, c = 2;
//    ////00000000000000000000000000000001 - 1
//    ////00000000000000000000000000000010 - 2
//    ////00000000000000000000000000000000 - 0
//    //printf("%d\n", a / b & c);
//    int x = 064;
//    int ret = ~x ^ x << 2 & x;
//    printf("%d",ret);
//}
//#include <stdio.h>
//int main() {
//    int  intArray[] = { 1, 2, 3, 4, 5 };
//    int* p = (int*)(&intArray + 1);
//    printf("%d,%d", *(intArray + 1), *(p - 1));
//    return 0;
//}
//#include <stdio.h>
//#include <string.h>
//void Func(char str_arg[100]) { printf("%d\n", sizeof(str_arg)); }
//int main(void) {
//    char str[] = "Hello";
//    printf("%d\n", sizeof(str));
//    printf("%d\n", strlen(str));
//    char* p = str;
//    printf("%d\n", sizeof(p));
//    Func(str);
//}
//#include <stdio.h>
//int main()
//{
//	/*char x = 65;
//	float y = 7.3;
//	int a = 100;
//	double b = 4.5;
//	printf("%d,%d,%d,%d\n", sizeof(x), sizeof(y), sizeof(a), sizeof(b));*/
//	return 0;
//}
//#include <stdio.h>
//int main() {
//	unsigned char a = 235;
//	//1110 1011
//	unsigned char b = ~a;
//	//0001 0100
//	unsigned char c = b >> 1;
//	//0000 1010
//	printf("%d", c);
//};
//#include<stdio.h>
//int main() {
//    char* a = "Trend";
//    char** b = &a;
//    *b = "commercial";
//    char* c = ++a;
//    a = "talents.";
//    printf("%c\n", *++c);
//    return 0;
//}
#include<stdio.h>
//int main()
//{
//	//int a = 1;
//	//int b = 1;
//	//a += b++;
//	//b += ++a;
//	//printf("a=%d b=%d\n",a,b);
//	return 0;
//}
//struct STU {
//    char num[10];
//    float score[3];
//};
//int main() {
//    struct STU s[3] = {
//            {"20021",90,95,85},
//            {"20022",95,80,75},
//            {"20023",100,95,90} }, * p = s;
//    int i;
//    float sum = 0;
//    for (i = 0; i < 3; i++)
//        sum = sum + p->score[i];
//    printf("%6.2f\n", sum);
//}
//int main() {
//    //int* k[10][30];
//    //printf("%d\n", sizeof(k));
//    int a = -1, b = 4, k;
//    k = (++a < 0) && !(b-- <= 0);
//    printf("% d % d % d\n", k, a, b);
//    return 0;
//}
//struct temp {
//    short a;//2/8 - 2
//    //0 1
//    char b;//1/8 - 1
//    //2
//    char c;//1/8 - 1
//    //3
//    long d;//4/8 - 4
//    //4 5 6 7
//    char e;//1/8 - 1
//    //8
//    int f;//4/8 - 4
//    //9 10 11 12
//};//16
//int main()
//{
//    printf("%d\n", sizeof(struct temp));
//    return 0;
//}
//int main()
//{
//	int x = 10;
//	int y = 20;
//	int z = 30;
//	if (x > y)
//		z = x;
//	x = y;
//	y = z;
//	printf("x=%d y=%d z=%d\n",x,y,z);//20 30 30
//	return 0;
//}
//int main(void) {
//    //int a[5] = { 1, 2, 3, 4, 5 };
//    //int* ptr = (int*)(&a + 1);
//    //printf("%d %d\n", *(a + 1), *(ptr - 1));
//    char* alp[] = { "ABC", "DEF", "GHI" };
//    int j;
//    puts(alp[1]);
//    return 0;
//}
//#include <stdio.h>
//
//void func(int* a, int b[]) 
//{ 
//    b[0] = *a + 6; 
//}
//main() {
//    int a, b[5];
//    a = 0;
//    b[0] = 3;
//
//    func(&a, b);
//    printf("%d\n", b[0]);
//}
//#include <stdio.h>
//int main() {
//    int m[] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0 };
//    int(*p)[4] = (int(*)[4])m;
//    printf("%d", p[1][2]);
//    return 0;
//}
//#include <stdio.h>
//main() {
//    char a[10] = { '1', '2', '3', '4', '5', '6', '7', '8', '9', 0 }, * p;
//    int i;
//    i = 8;
//    p = a + i;
//    printf("%s\n", p - 3);
//}
#include<stdio.h>
//int main()
//{
//	char a[] = { 'a','b','c' };
//	char b[] = { "abc" };
//	printf("%d\n",sizeof(a));
//	printf("%d\n",sizeof(b));
//	return 0;
//}
//int Xfun(int* a, int n) {
//	int x = *a;
//	for (int* pa = a + 1; pa < a + n; pa++)
//		if (*pa > x) x = *pa;
//	return x;
//}
//int main()
//{
//	int x[5] = { 23,46,78,55,16 };
//	int res = Xfun(x, 5);
//	printf("%d\n",res);
//	return 0;
//}
//void ss(char* s, char t) {
//    while (*s) {
//        if (*s == t) *s = t - 'a' + 'A';
//        s++;
//    }
//}
//int main() {
//    char str1[100] = "abcddfefdbd", c = 'd';
//    ss(str1, c);
//    printf("%s\n", str1);
//}
//struct A{
//    //0
//    char a;//1/8 - 1
//    //1 2 3 
//    int b;//4/8 - 4
//    //4 5 6 7
//    char c;//1/8 - 1
//    //8
//    //9 10 11
//};//12
//int main()
//{
//    printf("%d\n",sizeof(struct A));
//    return 0;
//}
//int main()
//{
//	char* str1 = "hello";
//	short* p1;
//	int      p2[2];
//
//	printf("%d\n", sizeof(str1));
//	printf("%d\n", sizeof(p1));
//	printf("%d\n", sizeof(p2));
//
//	return 0;
//}
//#define MA(x, y)  (x*y)
//int main()
//{
//	int i = 0;
//	i = 5;
//	i = MA(i, i + 1) - 7;
//	printf("%d\n",i);
//	return 0;
//}
//int main()
//{
//	/*int a = 3;
//	int b = 5;
//	printf("a=%d b=%d\n", a, b);
//	a = b;
//	printf("a=%d b=%d\n",a,b);*/
//	return 0;
//}
//int main(void)
//{
//	//int x = 3, y = 4, z = 5;
//	//int ret=!(x + y) + z - 1 && y + z / 2;
//	//printf("%d\n",ret);
//	printf("%p %p %p %p %p %p %p %p" "\0X41", "\0x41", "\X41", "\x41", "\a", "\b", "\c", "\r");
//	return 0;
//}
//#include <stdio.h>
//#define ADD(x) x + x
//main() {
//    int m = 1, n = 2, k = 3, sum;
//    sum = ADD(m + n) * k;//1+2+1+2*3=4+6=10
//    printf("sum = %d\n", sum);
//}
//int main() {
//	int i = 10;
//	int j = 1;
//	const int* p1;//(1) -指向常量字符串的指针
//	int const* p2 = &i; //(2) - 指向字符串的常量指针
//	p2 = &j;//(3)
//	int* const p3 = &i;//(4) - 指向字符串的常量指针
//	*p3 = 20;//(5)
//	*p2 = 30;//(6)
//	p3 = &j;//(7)
//	return 0;
//}
//struct st_t {
//    int status;
//    short* pdata;
//    char errstr[32];
//};
//int main()
//{
//    struct st_t st[16];
//    char* p = (char*)(st[2].errstr + 32);
//    printf("%d", (p - (char*)(st)));
//    return 0;
////}
//#include <stdio.h>
//class A
//{
//public:
//    void f()
//    {
//        printf("A\n");
//    }
//};
//
//class B : public A
//{
//public:
//    virtual void f()
//    {
//        printf("B\n");
//    }
//};
//
//int main()
//{
//    A* a = new B;
//    a->f();
//    delete a;
//    return 0;
//}
//#include <stdio.h>
//void fun(char** p) {
//    int i;
//    for (i = 0; i < 4; i++)
//        printf("%s", p[i]);
//}
//main() {
//    char* s[6] = { "ABCD", "EFGH", "IJKL", "MNOP", "QRST", "UVWX" };
//    fun(s);
//    printf("\n");
//}
//int main()
//{
//    int  a[3][2] = { 0 }, (*ptr)[2], i, j;
//    for (i = 0; i < 2; i++)
//    {
//        ptr = a + i;
//        scanf("%d", ptr);
//    }
//
//    for (i = 0; i < 3; i++)
//    {
//        for (j = 0; j < 2; j++)
//            printf("%2d", a[i][j]);
//        printf("\n");
//    }
//}
//(* (- 16 (* 3 2 2 )) (+ 5 (/ 6 (- 5 3))))
//(16-(3*2*2))*(5+(6/(5-3))))=(16-12)*(5+(6/2))=4*8=32
//int main() {
//    int a = 15, b = 21, m = 0;
//        switch (a % 3) {
//        case 0:m++; break;
//        case 1:m++;
//            switch (b % 2) {
//            default:m++;
//            case 0:m++; break;
//            }
//        }
//        printf("%d\n", m);
//}
//#include <stdio.h>
//#include <stdlib.h>
//void MallocMem(char* pc) {
//    pc = (char*)malloc(100);
//    return;
//}
//
//int main() {
//    char* str = NULL;
//    MallocMem(str);
//    strcpy(str, "hello ");
//    strcat(str + 2, "world");
//    printf("%s", str);
//    return 0;
//}
//int main()
//{
//	int x = 5;
//	const int* const p = &x;
//	//const int &q = x;//err
//	int const* next = &x;
//	const int* j = &x;
//	return 0;
//}
//int main()
//{
//	char c = '\72';// c中包含1个字符
//	int a = 0x122;
//	printf("%d",(a/2));//145
//	return 0;
//}
//#include<stdio.h>
//void fun(int px, int pa, int* pb) {
//    *pb = pa + px;
//    pa = *pb + px;
//}
//void main() {
//    int  x = 4, a = 2, b = 2;
//    fun(x, a, &b);
//    printf("%d,%d", a, b);//2 6
//}
//int main()
//{
//	int x = 23;
//	do {
//		printf("%d", x--);
//	} while (!x);
//	return 0;
//}
//int main()
//{
//	int i = 1;
//	int j;
//	j = i++;
//	printf("i=%d j=%d\n",i,j);
//	return 0;
//}
int main()
{
	int x, z;
	short y;
	x = 127;
	//00000000 00000000 00000000 01111111 - 127
	y = -9;
	//10000000 00000000 00000000 00001001 - -9
	z = x + y;
	//00000000 00000000 00000000 01111111  - x
	//01111111 11111111 11111111 10000000
	//01111111 11111111 11111111 10000001
	//11111111 11111111 11111111 00001001 - y
	//10000000 00000000 00000000 11110110
	//10000000 00000000 00000000 11110111
	// 
	//10000000 00000000 00000001 00001101 - x+y

	// 
	printf("%0x %0x %0x",x,y,z);
	return 0;
}
//char st[] = "hello,friend!";
//
//void func1(int i);
//void func2(int i);
//
//void func1(int i)
//{
//    printf("%c", st[i]);
//    if (i < 3)
//    {
//        i += 2;
//        func2(i);
//    }
//}
//
//void func2(int i)
//{
//    printf("%c", st[i]);
//    if (i < 3)
//    {
//        i += 2;
//        func1(i);
//    }
//}
//
//int main()
//{
//    int i = 0;
//    func1(i);
//    printf("\n");
//}
//int main() {
//	int a;
//	a = 125.534;  
//	printf("%d ",a);//125
//	a = (int)125.521 % 4;
//	printf("%d ", a);//1
//	a = 5 << 2;
//	//00000101
//	//00010100
//	printf("%d\n", a);//20
//}
//class Item {
//private:
//    char* desc;
//    int storage;
//public:
//    Item() {
//        desc = new char[51];
//    }
//
//    void setInfo(char* dsrc, int num) {
//        strcpy(desc, dsrc);
//        storage = num;
//    }
//};
//
//int main() {
//    Item stock;
//    stock.setInfo("pen", 20);
//    return 0;
//}
//int main()
//{
//	char dog[] = "wang\0miao";
//	printf("%d\n",sizeof(dog));//10
//	printf("%d",strlen(dog));//4
//	return 0;
//}
//int main() {
//    int m = 0256, n = 256;
//    
//    printf("%o %o\n", m, n);//256 400
//    return 0;
//}
void main(void) {
    int x;
    x = printf("I See, Sea in C ");
    printf("x=%d", x);//15
}
//#include <stdio.h>
//main()
//{
//	int  x;
//	for (x = 3; x < 6; x++)
//		printf((x % 2) ? ("*%d") : ("#%d"), x);
//	printf("\n");
//}
//int main() {
//    char p1[15] = "abcd", * p2 = "ABCD", str[50] = "xyz";
//    strcpy(str + 2, strcat(p1 + 2, p2 + 1));
//    printf("%s", str);
//}
int main(void)
{
    int i;
    for (i = 0; i < 2; i++) {
        fork();
        printf("-");
    }
    return 0;
}
//int main()
//{
//	int a = 7 % 4;
//	printf("%d",a);//3
//	return 0;
//}
//int main()
//{
//	char str[] = "Hello";
//	printf("%d", sizeof(str));//6
//	return 0;
//}
//int main()
//{
//	int a1, a2; 
//	char c1, c2;
//	scanf("%d%c%d%c", &a1, &c1, &a2, &c2);
//	//scanf用于输入整数时，当遇到非数字字符结束，此时非数字字符将存于键盘缓冲区，
//	//如果接着读入字符，将从键盘缓冲区读取字符。
//	printf("a1=%d c1=%c a2=%d c2=%c\n",a1,c1,a2,c2);
//	return 0;
//}
//int main()
//{
//	printf("%5s", "abcdefg");
//	//%.5s表示最多输入5个字符，如果不够，左边用空格补齐
//	//%5s表示最少输入5个字符
//	return 0;
//}
