//数组
//1.
//#include<stdio.h>
//#include<string.h>
//int main()
//{
//	char arr[] = "abcdef";
//	//1.strlen和sizeof 没有什么关联
//	//2.strlen是求字符串长度的- 只能针对字符串求长度 -库函数(使用得引头文件)#include<string.h>
//	//3.size of() 计算变量、数组、类型的大小 - 单位是字节 - 操作符
//	printf("%d\n",sizeof(arr));//7
//	printf("%d\n",strlen(arr));//6
//	return 0;
//}
//2.
//#include<stdio.h>
//int main()
//{
//	int arr[][4] = { {1,2,3},{4,5} };//二维数组可以省略行标，但列标一定不能省略
//	int i = 0;
//	int j = 0;
//	for (i = 0; i < 2; i++)
//	{
//		for (j = 0; j < 4; j++)
//		{
//			printf("%d ",arr[i][j]);
//		}
//		printf("\n");
//	}
//	return 0;
//}
//3.
//#include<stdio.h>
//int main()
//{
//	int arr[][4] = { {1,2,3},{4,5} };//二维数组可以省略行标，但列标一定不能省略
//	int i = 0;
//	int j = 0;
//	for (i = 0; i < 2; i++)
//	{
//		for (j = 0; j < 4; j++)
//		{
//			printf("arr[%d][%d]=%p\n",i,j, &arr[i][j]);//数组在内存中是连续存放的
//			//%p是打印地址时的格式符
//		}
//		//printf("\n");
//	}
//	return 0;
//}
//4.未经优化的冒泡排序
//#include<stdio.h>
//void bubble_sort(int arr[], int sz)
//{
//	//确定冒泡排序的趟数
//	int i = 0;
//	for (i = 0; i < sz - 1; i++)
//	{
//		//每一趟冒泡排序
//		int j = 0;
//		for (j = 0; j < sz - 1 - i; j++)
//		{
//			if (arr[j] > arr[j + 1])
//			{
//				int tmp = arr[j];
//				arr[j] = arr[j + 1];
//				arr[j + 1] = tmp;
//			}
//		}
//	}
//}
//	int main()
//	{
//		int arr[] = { 9,8,7,6,5,4,3,2,1,0 };
//		int i = 0;
//		int sz = sizeof(arr) / sizeof(arr[0]);
//	   //对arr进行排序，排成升序
//	   //arr是数组，对数组arr进行传参，实际上传递过去的是数组arr首元素的地址&arr[0]
//		bubble_sort(arr, sz);//冒泡排序函数
//		for (i = 0; i < sz; i++)
//		{
//			printf("%d ", arr[i]);
//		}
//		return 0;
//	}
//5.优化后的冒泡排序
//#include<stdio.h>
//void bubble_sort(int arr[], int sz)
//{
//	//确定冒泡排序的趟数
//	int i = 0;
//	for (i = 0; i < sz - 1; i++)
//	{
//		int flag = 1;//假设这一趟要排序的数据已经有序
//		//每一趟冒泡排序
//		int j = 0;
//		for (j = 0; j < sz - 1 - i; j++)
//		{
//			if (arr[j] > arr[j + 1])
//			{
//				int tmp = arr[j];
//				arr[j] = arr[j + 1];
//				arr[j + 1] = tmp;
//				flag = 0;//本趟排序的数据其实不完全有序
//			}
//		}
//		if (flag == 1)
//		{
//			break;
//		}
//	}
//}
//int main()
//{
//	int arr[] = {9,8,7,6,5,4,3,2,1,0};
//	int i = 0;
//	int sz = sizeof(arr) / sizeof(arr[0]);
//	//对arr进行排序，排成升序
//    //arr是数组，对数组arr进行传参，实际上传递过去的是数组arr首元素的地址&arr[0]
//	bubble_sort(arr,sz);//冒泡排序函数
//	for (i = 0; i < sz; i++)
//	{
//		printf("%d ",arr[i]);
//	}
//	return 0;
//}
//6.
#include<stdio.h>
int main()
{
	int arr[] = {1,2,3,4,5,6,7};
	//数组名是数组首元素的地址(但是有两个例外)
	//1.sizeof(数组名)-数组名表示整个数组,sizeof(数组名)计算的是整个数组的大小，单位是字节
	int sz = sizeof(arr) / sizeof(arr[0]);
	//2.&数组名，数组名代表的是整个数组，&数组名，取出的是整个数组的地址
	printf("%p\n",&arr[0]);//数组名是数组首元素的地址
	printf("%p\n", &arr[0]+1);
	printf("%p\n",arr);//数组名是数组首元素的地址
	printf("%p\n", arr+1);
	printf("%p\n",&arr);//数组名是整个数组的地址
	printf("%p\n", &arr+1);
	printf("%p\n",arr);//数组名是数组首元素的地址(但是有两个例外)
	printf("%p\n",&arr[0]);
	printf("%d\n",*arr);//*为解引用操作符
	return 0;
}
