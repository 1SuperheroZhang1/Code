#define _CRT_SECURE_NO_WARNINGS 1
//指针模块作业
#include<stdio.h>
//int main()
//{
//	unsigned long pulArray[] = {6,7,8,9,10};
//	unsigned long* pulPtr;
//	pulPtr = pulArray;
//	*(pulPtr + 3) += 3;
//	printf("%d,%d\n",*pulPtr,*(pulPtr+3));//6 12
//	return 0;
//}
//1.编程题：字符串逆序：写一个函数，能够逆序字符串内容
//#include<string.h>
//#include<assert.h>
//void reverse(char* arr)
//{
//	assert(arr);
//	int len = strlen(arr);
//	char* left = arr;
//	char* right = arr + len - 1;
//	while (left < right)
//	{
//		char tmp = *left;
//		*left = *right;
//		*right = tmp;
//		left++;
//		right--;
//	}
//}
//int main()
//{
//	char arr[256] = {0};
//	//scanf("%s",arr); scanf()函数在输入时遇到空格则停止输入
//	gets(arr);			//gets()函数输入一段字符串  输入一行
//	//逆序函数
//	reverse(arr);
//	printf("%s", arr);
//	return 0;
//}
//2.编程题：计算求和。 求Sn=a+aa+aaa+aaaa+aaaaa的前n项之和，其中a是数字
//#include<math.h>
//int main()
//{
//	int a = 0;
//	int n = 0;
//	scanf("%d%d",&a,&n);
//	int sum = 0;
//	int ret = 0;
//	int i = 0;
//	for (i = 0; i < n; i++)
//	{
//		ret = ret * 10 + a;
//		sum += ret;
//	}
//	printf("%d\n",sum);
//	return 0;
//}
//3.编程题：打印水仙花数。 求0~100000之间的水仙花数，并输出。
//#include<math.h>
//int main()
//{
//	int i = 0;
//	for (i = 0; i <= 100000; i++)
//	{
//		//判断i是否为水仙花数(自幂数)
//		//1.计算i的位数 - n位数
//		int n = 1;
//		int tmp = i;
//		int sum = 0;
//		while (tmp/10)
//		{
//			n++;
//			tmp /= 10;
//		}
//
//		//2.计算i的每一位的n次方之和
//		 tmp = i;
//		 while (tmp)
//		 {
//			 sum += pow(tmp % 10,n);
//			 tmp /= 10;
//		 }
//		//3.比较i==sum
//		 if(i == sum)
//		 {
//			 printf("%d ",i);
//		 }
//	}
//	return 0;
//}
//4. 编程题 打印菱形
//      *
//     ***
//    *****
//   *******
//  *********
// ***********
//*************
// ***********
//  *********
//   *******
//    *****
//     ***
//      *
//int main()
//{
//	int line = 0;
//	scanf("%d", &line);
//	int i = 0; 
//	//打印上半部分
//	for (i = 0; i < line-1; i++)
//	{
//		//打印空格
//		int j = 0;
//		for (j = 0; j < line - 1 - i; j++)
//		{
//			printf(" ");
//		}
//		//打印*
//		for (j = 0; j < 2 * i + 1; j++)
//		{
//			printf("*");
//		}
//		printf("\n");
//	}
//	//打印下半部分
//	for (i = 0; i < line; i++)
//	{
//		//打印空格
//		int j = 0;
//		for (j = 0; j <=i; j++)
//		{
//			printf(" ");
//		}
//		//打印*
//		for (j = 0; j <2*(line-1-i)-1 ; j++)
//		{
//			printf("*");
//		}
//		printf("\n");
//	}
//	return 0;
//}
