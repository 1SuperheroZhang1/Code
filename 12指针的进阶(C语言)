//在初始指针阶段,了解了指针的概念
/*指针的概念：
 1.指针就是一个变量，用来存放地址，地址唯一标识一块内存空间。
 2.指针的大小是固定的4、8个字节(32位平台/64位平台)
 3.指针是有类型的，指针的类型决定了指针"+"，"-"整数的步长，指针解引用操作时候的权限。
 4.指针的运算
*/
#include<stdio.h>
//数组名是数组首元素的地址(但是有两个例外)
//1.sizeof(数组名) - 数组名表示整个数组,sizeof(数组名)计算的是整个数组的大小，单位是字节
//int sz = sizeof(arr) / sizeof(arr[0]);
//2.&数组名，数组名代表的是整个数组，&数组名，取出的是整个数组的地址
//void test(int arr[])
//{
//	int sz = sizeof(arr) / sizeof(arr[0]);
//	printf("%d\n",sz);
//}
//int main()
//{
//	int arr[10] = {0};
//	test(arr);
//	return 0;
//}
//数组传参,传过去的是 数组首元素的地址 ,是指针,在32位平台下，指针所占字节大小为4;在64位平台下,指针所占字节大小为8.
//指针的进阶
//一、字符指针char*,一般使用：
//int main()
//{
//	char ch = 'w';
//	char* pc = &ch;
//	return 0;
//}
//int main()
//{
//	char arr[] = "abcdef";
//	char* pc = arr;
//	printf("%s\n",arr);
//	printf("%s\n",pc);
//	return 0;
//}
//int main()
//{
//	const char* p = "abcdef";//"abcdef"是一个常量字符串
//	//printf("%c\n",*p);//a
//	printf("%s\n",p);
//	return 0;
//}
// www.stackoverflow.com
// Segmentation fault - 段错误
//segmentfault.com
//int main()
//{
//	char arr1[] = "abcdef";
//	char arr2[] = "abcdef";
//	if (arr1 == arr2)
//	{
//		printf("hehe\n");
//	}
//	else
//	{
//		printf("haha\n");
//	}
//	return 0;
//}
//打印结果为haha，arr1和arr2分别开辟一段内存
//int main()
//{
//	const char* p1 = "abcdef";//"abcdef"相当于常量字符串
//	const char* p2 = "abcdef";
//	if (p1 == p2)
//	{
//		printf("hehe\n");
//	}
//	else
//	{
//		printf("haha\n");
//	}
//	return 0;
//}
//打印结果为hehe
//<<剑指offer>>
//二、指针数组：存放指针的数组
//int main()
//{
//	int arr[10] = {0};//整型数组
//	char ch[5] = {0}; //字符数组
//	int* parr[4];//存放整形指针的数组 - 指针数组
//	char* pch[5];//存放字符指针的数组 - 指针数组
//	return 0;
//}
//int main()
//{
//	int arr1[] = {1,2,3,4,5};
//	int arr2[] = {2,3,4,5,6};
//	int arr3[] = {3,4,5,6,7};
//	int* parr[] = {arr1,arr2,arr3};
//	int i = 0;
//	for (i = 0; i < 3; i++)
//	{
//		int j = 0;
//		for (j = 0; j < 5; j++)
//		{
//			printf("%d ", * (parr[i] + j));
//		}
//		printf("\n");
//	}
//	return 0;
//}
//三、数组指针：能够指向数组的指针
//int main()
//{
//	int* p = NULL;//p是整形指针 - 指向整形的指针 - 可以存放整形的地址
//	char *pc = NULL;//pc是字符指针 - 指向字符的指针 - 可以存放字符的地址
//	                //数组指针 - 指向数组的指针 - 可以存放数组的地址
//	//int arr[10]={0};
//	//arr - 首元素地址
//	//&arr[0] - 首元素地址
//	//&arr - 数组地址
//	int arr[10] = {1,2,3,4,5,6,7,8,9,10};
//	int (*p)[10]=&arr;//p为数组指针
//	//int *p1[10];//p1 - 指针数组
//	//int(*p2)[10];//p2 - 数组指针
//	return 0;
//}
//int main()
//{
//	char* arr[5];
//	char* (*pa)[5]=&arr;
//	//pa是指针变量的名字，*表示pa是指针,[5]表示pa指向的数组有5个元素，char* 表示pa指向的数组的元素类型是char*
//	int arr2[10] = {0};
//	int (*parr2)[10]=&arr2;//数组指针
//	return 0;
//}
//&数组名 VS 数组名
//数组名表示的是数组首元素的地址
//&数组名表示的是数组的地址，不是数组首元素的地址
//四、数组指针的使用
//int main()
//{
//	int arr[10] = {1,2,3,4,5,6,7,8,9,10};
//	int *p=arr;
//	/*int i = 0;
//	for (i = 0; i < 10; i++)
//	{
//		printf("%d ", *(p + i));
//	}*/
//	int (*pa)[10]=&arr;
//	int i = 0;
//	//for (i = 0; i < 10; i++)
//	//{
//	//	printf("%d ", *(*pa+i));//*pa==arr
//	//}
//	for (i = 0; i < 10; i++)
//	{
//		printf("%d ", (*pa)[i]);
//	}
//	return 0;
//}
//Ⅰ.参数是数组的形式
//void print1(int arr[3][5], int row, int col)
//{
//	int i = 0;
//	for (i = 0; i < row; i++)
//	{
//		int j = 0;
//		for (j = 0; j < col; j++)
//		{
//			printf("%d ",arr[i][j]);
//		}
//		printf("\n");
//	}
//}
//Ⅱ.参数是指针的形式
//void print2(int(*p)[5], int row, int col)
//{
//	int i = 0;
//	for (i = 0; i < row; i++)
//	{
//		int j = 0;
//		for (j = 0; j < col; j++)
//		{
//			//printf("%d ", *(*(p + i)+j));
//			//printf("%d ",p[i][j]);
//			printf("%d ",(*(p+i))[j]);
//		}
//		printf("\n");
//	}
//}
//int main()
//{
//	int arr[3][5] = { {1,2,3,4,5},{2,3,4,5,6},{3,4,5,6,7} };
//
//	//print1(arr, 3, 5);
//	print2(arr, 3, 5);
//	return 0;
//}
//int main()
//{
//	int arr[10] = {1,2,3,4,5,6,7,8,9,10};
//	int* p = arr;
//	int i = 0;
//	for (i = 0; i < 10; i++)
//	{
//		printf("%d ",p[i]);
//		printf("%d ",*(p+i));
//		printf("%d ",*(arr+i));
//		printf("%d ",arr[i]);
//	}
//	return 0;
//}
//解释下面代码含义
int arr[5];		//arr是一个含有5个元素的整形数组
int *parr1[10];	//parr1是一个含有10个元素的指针数组，每个元素的类型是int*
int (*parr2)[10];	//parr2是一个含有10个元素的数组指针，该指针指向一个数组，每个元素的类型是int[10]
int (*parr3[10])[5];//parr3是一个数组，该数组有10个元素，每个元素是一个数组指针，该数组指针指向的数组有5个元素，每个元素是int
