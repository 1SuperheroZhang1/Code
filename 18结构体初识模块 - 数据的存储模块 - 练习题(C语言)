#define _CRT_SECURE_NO_WARNINGS 1
//结构体初识模块 - 练习题
#include<stdio.h>
//struct stu {
//	int num;
//	char name[10];
//	int age;
//};
//
//void fun(struct stu *p)
//{
//	printf("%s\n",(*p).name);
//	return;
//}
//int main()
//{
//	struct stu students[3] = { {9801,"zhang",20},{9802,"wang",19},{9803,"zhao",18}};
//	fun(students + 1);//wang
//	return 0;
//}
//1.编程题 喝汽水问题  喝汽水，1瓶汽水1元，两个空瓶可以换一瓶汽水，给20元，可以喝多少瓶汽水
//int main()
//{
//	int money = 0;
//	int total = 0;
//	int empty = 0;
//	scanf("%d", &money);
//	//买回来的汽水喝掉
//	total = money;
//	empty = money;
//	//换回的汽水
//	while (empty >= 2)
//	{
//		total += empty / 2;
//		empty = empty / 2 + empty % 2;
//	}
//	printf("total=%d\n",total);
//	return 0;
//}
//int main()
//{
//	int money = 0;
//	int total = 0;
//	scanf("%d",&money);
//	if (money == 0)
//	{
//		total = 0;
//	}
//	else
//	{
//		total = 2 * money - 1;
//	}
//	printf("total=%d\n",total);
//	return 0;
//}
//2.编程题 调整奇数偶数的顺序 调整数组，使奇数全部位于偶数前面
//void print(int arr[],int sz)
//{
//	int i = 0;
//	for (i = 0; i < sz; i++)
//	{
//		printf("%d ",arr[i]);
//	}
//	printf("\n");
//}
//void move(int arr[],int sz)
//{ 
//	int left = 0;
//	int right = sz - 1;
//	while (left < right)
//	{
//		//从左边找偶数
//		while ((left < right) && arr[left] % 2 == 1)
//		{
//			left++;
//		}
//		//从右边找奇数
//		while ((left < right) && arr[right] % 2 == 0)
//		{
//			right--;
//		}
//		if (left < right)
//		{
//			int tmp = arr[left];
//			arr[left] = arr[right];
//			arr[right] = tmp;
//		}
//	}
//}
//int main()
//{
//	int arr[] = {1,2,3,4,5,6,7,8,9,10};
//	int sz = sizeof(arr) / sizeof(arr[0]);
//	print(arr, sz);
//	move(arr,sz);
//	print(arr,sz);
//	return 0;
//}
//数据的存储模块 - 练习题
//1.
//int main()
//{
//	//unsigned char类型的内存范围 - 0~255
//	unsigned char a = 200;
//	unsigned char b = 100;
//	unsigned char c = 0;
//
//	c = a + b;//整形提升
//	//整形提升 -无符号数 - 高位补零
//	//         -有符号数 - 高位补原符号位
//	//00000000000000000000000011001000 - a
//	//00000000000000000000000001100100 - b
//	//00000000000000000000000100101100 - a+b
//	//00101100 - c
//	//unsigned char - 1个字节 - 8个bit位
//	//00000000000000000000000011001000
//	//11001000 - a
//	//00000000000000000000000001100100
//	//01100100 - b
//	
//	printf("%d %d",a+b,c);//%d 打印的是十进制的有符号补码
//	             //300 44
//	return 0;
//}
//2.
//int main()
//{
//	unsigned int a=0x1234;//0x1234 - 0x 00 00 12 34
//	unsigned char b = *(unsigned char*) & a;
//	//0x1234 - 0x 00 00 12 34
//	//大端存储模式 - 高字节序列存储在低地址，低字节序列存储在高地址
//	//0x 00 00 12 34 - unsigned char ->0x 00
//	printf("%d\n",b);
//	return 0;
//}
//3.
//#include<string.h>
//int main()
//{
//	//有符号char类型的内存范围 -128~127
//	char a[1000] = {0};
//	int i = 0;
//	for (i = 0; i < 1000; i++)
//	{
//		a[i] = -1 - i;
//	}
//	//-1,-2,...,-127,-128,127,126,...,2,1,0...
//	printf("%d",strlen(a));//255
//	return 0;
//}
//4.编程题 打印杨辉三角
//	 		1
//	 	  1   1
//	    1   2   1
//	  1   3   3   1
//  1   4   6   4   1
//int main()
//{
//	int arr[10][10] = {0};
//	int i = 0;
//	int j = 0;
//	for (i = 0;i < 10; i++)
//	{
//		for (j = 0; j <= i; j++)
//		{
//			if (j == 0)
//			{
//				arr[i][j] = 1;
//			}
//			if (i == j)
//			{
//				arr[i][j] = 1;
//			}
//			if (i >= 2 && j >= 1)
//			{
//				arr[i][j] = arr[i-1][j-1] + arr[i-1][j];
//			}
//		}
//	}
//	for (i = 0; i < 10; i++)
//	{
//		for (j = 0; j <= i; j++)
//		{
//			printf("%d ",arr[i][j]);
//		}
//		printf("\n");
//	}
//	return 0;
//}
//5.编程题 猜凶手
//日本某地发生了一件谋杀案，警察通过排查确定杀人凶手必为4个嫌疑犯的一个。以下为4个嫌疑犯的供词
//A说：不是我
//B说：是C
//C说：是D
//D说：C在胡说
//已知，3个人说了真话，1个人说了假话
//现在根据这些信息，写一个程序，确定谁是凶手
//int main()
//{
//	int killer = 0;
//	for (killer = 'a'; killer <= 'd'; killer++)
//	{
//		if ((killer != 'a') + (killer == 'c') + (killer == 'd') + (killer != 'd') == 3)
//		{
//			printf("killer=%c\n",killer);
//		}
//	}
//	return 0;
//}
//赛马问题：有36匹马，6个跑道，没有计时器，请赛马确定，36匹马中的前三名,请问最少比赛几次？
//至少比赛8次
//赛马问题：有25匹马，5个跑道，没有计时器，请赛马确定，25匹马中的前三名,请问最少比赛几次？
//烧香问题：
//有一种香，材质不均匀，但是每一根这样的香，燃烧完恰好是1个小时
//给你2根香，帮我确定一个15分钟的时间段
//思维题 - 智力题
//6.编程题 猜名次
/*5位运动员参加了10米台跳水比赛，有人让他们预测比赛结果：
* A选手说：B第二，我第三
* B选手说：我第二，E第四
* C选手说：我第一，D第二
* D选手说：C最后，我第三
* E选手说：我第四，A第一
* 比赛结束后，每位选手都说对了一半，请编程比较比赛的名次
*/ 
//int main()
//{
//	int a = 0;
//	int b = 0;
//	int c = 0;
//	int d = 0;
//	int e = 0;
//	for (a = 1; a <= 5; a++)
//	{
//		for (b = 1; b <= 5; b++)
//		{
//			for (c = 1; c <= 5; c++)
//			{
//				for (d = 1; d <= 5; d++)
//				{
//					for (e = 1; e <= 5; e++)
//					{
//						if (((b==2)+(a==3)==1) && 
//							((b==2) + (e==4) == 1) && 
//							((c==1) + (d==2) == 1) && 
//							((c==5) + (d==3) == 1) && 
//							((e==4) + (a==1) == 1))
//						{
//							if(a*b*c*d*e==120)
//							printf("a=%d,b=%d,c=%d,d=%d,e=%d\n",a,b,c,d,e);//BDAEC
//						}
//					}
//				}
//			}
//		}
//	}
//	return 0;
//}
