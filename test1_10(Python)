# Superhero Zhang
#Bug的由来及分类
    #Bug的由来:世界上第一部万用计算机的进化版-马克2号
    #Debug
    #Bug常见的类型
        #粗心导致的语法错误SyntaxError
            #(1) age=input('请输入你的年龄:')
            #    if age>=18:
            #       print('成年人，做事需要负法律责任了')
            #错误原因:input()函数的输入类型为字符串，不能直接与整数进行比较
            #(2)while i<10:
            #       print(i)
            #i未定义，没有循环终止条件
            #for i in range(3):
            #   uname=input('请输入用户名:')
            #   pwd=input('请输入密码:')
            #   if uname='admin' and pwd='admin':
            #       print('登录成功!')
            #       break
            #   else:
            #       print('输入有误')
            #else:
            #   print('对不起，三次均输入错误')
            #'=='比较运算符和'='赋值运算符的混用
        #知识不熟练导致的错误
            #(1)索引越界问题IndexError
            #   lst=[11,22,33,44]
            #       print(lst[4])
            #(2)append()方法的使用掌握不熟练
            #lst=[]
            #lst=append('A','B','C')
            #print(lst)
            #append()方法一次只能添加一个元素
        #思路不清晰导致的问题解决方案
            #(1)使用print()函数
            #(2)使用'#'暂时注释部分代码
        #被动掉坑：程序代码逻辑没有错误，只是因为用户操作错误或者一些”例外情况“而导致的程序崩溃
        #被动掉坑解决方案：Python提供了异常处理机制，可以在异常出现时即时捕获，然后内部”消化“，让程序继续进行

        #try:
        #   可能会出现异常的代码
        #except xxx:   xxx表示异常类型
        #   报错后执行的代码(异常处理代码)
        #多个except结构:
        #   捕获异常的顺序按照先子类后父类的顺序，为了避免遗漏可能出现的异常，可以在最后增加BaseException
#Python的异常处理机制：
    #1.try...except结构：
        #try:
        #可能会出现异常的代码
        #except Exception1:
        #异常处理代码
        #except Exception2:
        #异常处理代码
        #except BaseException :
        #异常处理代码
    #2.try...except...else结构：
    #           如果try块中没有抛出异常，则执行else块，如果try中抛出异常，则执行except块
    #3.try...except...else...finally结构：
    #           finally块无论是否发生异常都会被执行，能常用来释放try块中申请的资源
    #traceback模块:使用traceback模块打印异常信息
#Python中常见的异常类型
#序号                   异常类型                              描述
#1                    ZeroDivisionError            除(或取模)零(所有数据类型)
#2                    indexError                   序列中没有此索引(index)
#3                    KeyError                     映射中没有这个键               ---->dic={'name':'zhangsan'}
#                                                                              ---->print(dic['gender'])
#4                    NameError                    未声明/初始化对象(没有属性)      ---->print(num)
#5                    SyntaxError                  Python语法错误                ---->int a=20
#6                    ValueError                   传入无效参数                   ---->a=int('hello')
'''粗心导致的语法错误SyntaxError'''
#(1)
#age=input('请输入你的年龄:')
#if int(age)>=18:
#    print('成年人，做事需要负法律责任了')
#(2)
i=0
while i<10:
    print(i)
    i+=1
#(3)
#for i in range(3):
#    uname=input('请输入用户名:')
#    pwd=input('请输入密码:')
#    if uname=='admin' and pwd=='admin':
#        print('登录成功!')
#        break
#    else:
#     print('输入有误')
#else:
#    print('对不起，三次均输入错误')
'''知识不熟练导致的错误'''
#(1)索引越界问题IndexError
#lst=[11,22,33,44]
#print(lst[4])
#(2)append()方法的使用掌握不熟练
#lst=[]
#lst.append('a')#lst=append('A','B','C')
#print(lst)
#try:
#    a=int(input('请输入第一个整数'))
#    b=int(input('请输入第二个整数'))
#    result=a/b
#    print('结果为:',result)
#except ZeroDivisionError:
#    print('对不起，除数不允许为0')
#except ValueError:
#    print('只能输入数字串')
#print('程序结束')
#try:
#    n1=int(input('请输入一个整数'))
#   n2=int(input('请输入另一个整数'))
#    result=n1/n2
#except BaseException as e:
#    print('出错了',e)
#else:
#    print('结果为',result)
try:
    n1=int(input('请输入一个整数'))
    n2=int(input('请输入另一个整数'))
    result=n1/n2
except BaseException as e:
    print('出错了',e)
else:
    print('结果为',result)
finally:
    print('谢谢您的使用')
#PyCharm开发环境的调试:
#断点：程序运行到此处，暂时挂起，停止执行。此时可以详细的观察程序的运行情况，方便做出进一步判断
#进入调试视图(三种方式)
#            (1)单击工具栏上的按钮
#            (2)右键单击编辑区：点击：debug'模块名'
#            (3)快捷键：shift+F9
