#define _CRT_SECURE_NO_WARNINGS 1
#include<stdio.h>
#include<string.h>
//模拟库函数qsort()实现自定义函数bubble_sort()使得该函数具备比较任意数据类型数据的功能。
//void qsort(void* base,size_t num,size_t byte,int(*compare)(const void*e1,const void*e2))
	//base第一个参数 待排序数组的首元素地址
	//num第二个参数  待排序数组的元素个数
	//byte第三个参数 待排序数组的每个元素的大小 - 单位是字节
	//compare第四个参数 函数指针 - 比较两个元素的所用函数的地址 -这个函数需要自定义  函数指针的两个参数 - 待比较的两个元素的地址
struct Stu
{
	char name[20];
	int age;
};
int cmp_int(void* e1, void* e2)
{
	return *(int*)e1 - *(int*)e2;
}
int cmp_float(const void* e1,const void* e2)
{
	return *(float*)e1 - *(float*)e2;
}
int cmp_stu_byage(void* e1,void* e2)
{
	return ((struct Stu*)e1)->age - ((struct Stu*)e2)->age;
}
int cmp_stu_byname(void* e1, void* e2)
{
	return strcmp(((struct Stu*)e1)->name, ((struct Stu*)e2)->name);
}
void Swap(char* buf1, char* buf2,int width)
{
	int i = 0;
	for (i = 0; i < width; i++)
	{
		char tmp = *buf1;
		*buf1 = *buf2;
		*buf2 = tmp;
		buf1++;
		buf2++;
	}
}
void bubble_sort(void* base, int sz, int width, int(*cmp)(void* e1, void* e2))
{
	int i = 0;
	//趟数
	for (i = 0; i < sz - 1; i++)
	{
		int j = 0;
		//每一趟比较的对数
		for (j = 0; j < sz - 1 - i; j++)
		{
			//两个元素进行比较
			if (cmp((char*)base + j * width, (char*)base + (j + 1) * width)> 0) 
			{
				//交换
				Swap((char*)base + j * width, (char*)base + (j + 1) * width,width);
			}
		}
	}
}
void test()
{
	int arr[] = { 9,8,7,6,5,4,3,2,1,0 };
	int sz = sizeof(arr) / sizeof(arr[0]);
	bubble_sort(arr, sz, sizeof(arr[0]), cmp_int);
	int i = 0;
	for (i = 0; i < sz; i++)
	{
		printf("%d ", arr[i]);
	}
}
void test1()
{
	float f[] = {9.0,8.0,7.0,6.0,5.0};
	int sz = sizeof(f) / sizeof(f[0]);
	bubble_sort(f, sz, sizeof(f[0]), cmp_float);
	int j = 0;
	for (j = 0; j < sz; j++)
	{
		printf("%f ",f[j]);
	}
}

void test2()
{
	struct Stu s[3] = { {"zhangsan",20},{"lisi",30},{"wangwu",10}};
	int sz = sizeof(s) / sizeof(s[0]);
	bubble_sort(s,sz,sizeof(s[0]),cmp_stu_byage);
	int i = 0;
	for (i = 0; i < sz; i++)
	{
		printf("name: %s ",s[i].name);
		printf("age: %d ",s[i].age);
	}
};
void test3()
{
	struct Stu s[3] = { {"zhangsan",20},{"lisi",30},{"wangwu",10} };
	int sz = sizeof(s) / sizeof(s[0]);
	bubble_sort(s, sz, sizeof(s[0]), cmp_stu_byname);
	int i = 0;
	for (i = 0; i < sz; i++)
	{
		printf("name: %s ", s[i].name);
		printf("age: %d ", s[i].age);
	}
};
int main()
{
	//test();
	//test1();
	//test2();
	test3();
	return 0;
}
